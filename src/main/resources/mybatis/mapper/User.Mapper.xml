<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.AssassinG.scsycc.entitys.User.dao.UserDaoImpl">

	<!-- 用户信息表 -->
	<sql id="t_user"> t_user </sql>

	<resultMap id="beanMap" type="User">
		<id column="id" property="id" />
		<result column="create_time" property="createTime" />
		<result column="update_time" property="updateTime" />
		<result column="delete_time" property="deleteTime" />
        <result column="is_deleted" property="isDeleted" />
		<result column="user_name" property="username" />
        <result column="_password" property="password" />
	</resultMap>
	
	<insert id="insert" parameterType="User" keyProperty="id" useGeneratedKeys="true">
		insert into <include refid="t_user"/> (create_time, update_time, delete_time, is_deleted, user_name, _password)
		values (#{createTime}, #{updateTime}, #{deleteTime}, #{isDeleted}, #{username}, #{password})
	</insert>

	<insert id="batchInsert" parameterType="List" keyProperty="id" useGeneratedKeys="true">
		insert into <include refid="t_user"/> (create_time, update_time, delete_time, is_deleted, user_name, _password)
		values
        <foreach collection="list" item="obj" separator=",">
            (#{obj.createTime}, #{obj.updateTime}, #{obj.deleteTime}, #{obj.isDeleted}, #{obj.username}, #{obj.password})
        </foreach>
	</insert>
	
	<update id="update" parameterType="User">
		update <include refid="t_user"/>
		<set>
			update_time = now(),
			user_name =  #{username},
            _password =  #{password}
		</set>
		<where>
			ID = #{id}
		</where>
	</update>

    <update id="batchUpdate" parameterType="List">
        update <include refid="t_user"/>
        <trim prefix="set" suffixOverrides=",">
            <trim prefix="update_time =case" suffix="end,">
                <foreach collection="list" item="item">
                    when id=#{item.id} then now()
                </foreach>
            </trim>
            <trim prefix="user_name =case" suffix="end,">
                <foreach collection="list" item="item">
                    <if test="item.username!=null">
                        when id=#{item.id} then #{item.username}
                    </if>
                </foreach>
            </trim>
            <trim prefix="_password =case" suffix="end,">
                <foreach collection="list" item="item">
                    <if test="item.password!=null">
                        when id=#{item.id} then #{item.password}
                    </if>
                </foreach>
            </trim>
        </trim>
        <where>
            <foreach collection="list" separator="or" item="item">
                id=#{item.id}
            </foreach>
        </where>
    </update>

    <update id="delete" parameterType="User">
        update <include refid="t_user"/>
        <set>
            delete_time = now(),
            is_deleted =  true
        </set>
        <where>
            ID = #{id}
        </where>
    </update>
	
  	<select id="getById" parameterType="long" resultMap="beanMap">
    	select * from <include refid="t_user"/> where id = #{id}
  	</select>
  	
  	<select id="findByUserNo" parameterType="string" resultMap="beanMap">
    	select * from <include refid="t_user"/> where user_name= #{username}
  	</select>
  	
  	<select id="listAll" resultMap="beanMap">
    	select * from <include refid="t_user"/> order by id
  	</select>

	<sql id="condition_sql">
		<!-- Equal query -->
		<if test="createTime != null"> and create_time = #{createTime}</if>
		<if test="updateTime != null"> and update_time = #{updateTime}</if>
		<if test="deleteTime != null"> and delete_time = #{deleteTime}</if>
		<!-- Like query -->
		<if test="username != null and username != ''"> and user_name like CONCAT(CONCAT('%', #{username}), '%')</if>
	</sql>
	
	<select id="listPage" parameterType="java.util.Map" resultMap="beanMap">
		select * from  
		<include refid="t_user"/>
		
		<where>
			<include refid="condition_sql" />
		</where>
		order by id desc 
		limit #{pageFirst} , #{pageSize} 
	</select>
	
	<select id="listPageCount" parameterType="java.util.Map" resultType="long">
		select count(1) from <include refid="t_user"/>
		<where>
			<include refid="condition_sql"/>
		</where>
	</select>
	
</mapper>